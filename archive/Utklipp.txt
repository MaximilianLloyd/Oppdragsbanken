
HTML:
<section aria-labelledby="Oppdragsbeskrivelse" class="sBoksRamme sB tekst oppdragGrid">
   <div id="spacer"></div>
   <img class="boksRamme sB oppdragsSideBilde src="/images/img_1.jpg" alt="alttekst_1" tittel="tittel_1" />
   <div class="sPA">
      <h2 id="Oppdragsbeskrivelse" class="spessartinDek">Produkt</h2>
      <p><!-- tekstinnhold --></p>
      <h3 class="spessartinDek">Beskrivelse</h3>
      <p><!-- tekstinnhold --></p>
      <h3 class="spessartinDek">Suksesskriterier</h3>
      <ul>
         <li>
            <p><!-- tekstinnhold --></p>
         </li>
      </ul>
   </div>
</section>
<section aria-labelledby="Ekstra info" class="sBoksRamme sB sPA tekst infoGrid">
   <h3 id="ekstra-info" class="spessartinDek">Ekstra info</h3>
   <p><!-- tekstinnhold --></p>
</section>
<section aria-labelledby="Nettressurser" class="sBoksRamme sB sPA tekst ressursGrid">
   <h3 id="nettressurser" class="spessartinDek">Nettressurser</h3>
   <ul>
      <li>
         <p><!-- tekstinnhold --></p>
      </li>
      <li>
         <p><!-- tekstinnhold --></p>
      </li>
   </ul>
</section>
<section aria-labelledby="Bildegalleri" class="sBoksRamme sB sPS tekst bildeGrid">
   <h3 id="Bildegalleri" class="spessartinDek">Inspirasjon</h3>
   <div class="sideTeller">
      <h5 class="gjeldendeSiden"></h5>
      <h5 class="sideSkille">/</h5>
      <h5 class="siderTotalt"></h5>
   </div>
   <div class="pilBakgrunnTilbake" id="pilForrigeGruppe">
      <div class="svgIkon maskeTilbake pil-tilbake" alt="forrige bildegruppe"></div>
   </div>
   <div class="pilBakgrunnNeste" id="pilNesteGruppe">
      <div class="svgIkon maskeNeste pil-neste" alt="neste bildegruppe"></div>
   </div>
   <div class="bildegalleri_fire-pluss rb-ramme" id="galleri-grid">
      <div class="galleribilde">
         <h5 class="bildetittel"></h5>
         <img class="miniatyrbilde" src="/images/img_1.jpg" alt="alttekst_1" tittel="tittel_1" />
         <p class="bildetekst"></p>
      </div>
      <div class="galleribilde">
         <h5 class="bildetittel"></h5>
         <img class="miniatyrbilde" src="/images/img_2.jpg" alt="alttekst_2" tittel="tittel_2" />
         <p class="bildetekst"></p>
      </div>
      <div class="galleribilde">
         <h5 class="bildetittel"></h5>
         <img class="miniatyrbilde" src="/images/img_3.jpg" alt="alttekst_3" tittel="tittel_3" />
         <p class="bildetekst"></p>
      </div>
      <div class="galleribilde">
         <h5 class="bildetittel"></h5>
         <img class="miniatyrbilde" src="/images/img_4.jpg" alt="alttekst_4" tittel="tittel_4" />
         <p class="bildetekst"></p>
      </div>
   </div>
   <div class="bildefremvisning">
      <div class="bildeRamme sBoksRamme tekst sB">
         <div class="bilderammeHeader sPS">
            <h2 class="bildetittelAktiv spessartinDek" id="bildetittelAktiv"></h2>
            <div class="svgIkon maskeKryss"></div>
         </div>
         <div class="aktivtBildeRamme">
            <div class="aktivtBilde"></div>
            <div class="pilBakgrunnTilbake" id="pilForrigeBilde">
               <div class="svgIkon maskeTilbake pil-tilbake" alt="forrige bildegruppe"></div>
            </div>
            <div class="pilBakgrunnNeste" id="pilNesteBilde">
               <div class="svgIkon maskeNeste pil-neste" alt="neste bildegruppe"></div>
            </div>
         </div>
         <div class="bildeRammeFooter sPS">
            <h5 class="bildetekstAktiv" id="bildetekstAktiv"></h5>
            <div class="bildeTeller">
               <h5 class="gjeldendeBilde"></h5>
               <h5 class="bildeSkille">/</h5>
               <h5 class="bilderTotalt"></h5>
            </div>
         </div>
         <div class="bildeKarusell"></div>
      </div>
   </div>
</section>

CSS:
.bildegalleri_firePluss {
   display: grid;
   grid-template-columns: repeat(4, 1fr);
   grid-gap: 1rem;
   padding-block-end: 3rem;
}
.galleribilde {
   display: flex;
   flex-direction: column;
   place-content: center;
}
.bildegalleri_fire-pluss div:nth-child(n + 5) {
   display: none;
}
.miniatyrbilde {
   height: 100%;
   object-fit: cover;
   cursor: pointer;
   transform-origin: center;
   transition: outline 0.1s ease-in-out;
   border-radius: 0.4rem;
}
.spessartinHover {
   outline: 2px solid var(--clr-ramme);
}
.spessartinHover:hover,
.spessartinHover:focus-visible {
   transition: outline 0.1s ease-in-out;
   outline: 2px solid var(--clr-spessartin);
}
.bilderammeHeader,
.bildeRammeFooter {
   display: flex;
   width: 100%;
   height: 50px;
   justify-content: space-between;
   place-items: center;
}
.bildetittel {
   text-align: start;
}
.bildetekst {
   text-align: end;
}
.sideTeller {
   position: absolute;
   top: 0;
   right: 0;
   transform: translateX(-50%);
   margin-block-start: 0.5rem;
   margin-inline-end: 0.5rem;
}
.bildefremvisning {
   position: fixed;
   top: 0;
   left: 0;
   height: 100%;
   width: 100%;
   z-index: 100;
   background-color: rgba(0, 0, 0, 0.8);
   display: none;
   flex-direction: column;
   justify-content: center;
   align-items: center;
   display: none;
}
.bildeRamme {
   position: relative;
}
.aktivtBildeRamme {
   position: relative;
}
.bildetekstAktiv,
.bildetittelAktiv {
   width: auto;
}
.bildeKarusell {
   margin-block: 1rem;
   padding: 1rem;
   background-color: var(--clr-tabellBoks);
   display: flex;
   gap: 1rem;
   overflow-x: auto;
   width: 90vw;
   align-content: start;
   justify-content: space-between;
}
.bildeKarusell img {
   height: 100%;
   width: 100%;
   max-height: 150px;
   object-fit: cover;
   cursor: pointer;
   border-top-right-radius: clamp(0.1rem, 0.2rem, 0.3vw);
   border-top-left-radius: clamp(0.4rem, 0.8rem, 0.8vw);
   border-bottom-left-radius: clamp(0.1rem, 0.2rem, 0.3vw);
   border-bottom-right-radius: clamp(0.4rem, 0.8rem, 0.8vw);
   aspect-ratio: 4 / 3;
}
.bildeKarusell img:not(.aktivtKarusellBilde) {
   filter: grayscale(0.8);
   transition: all 100ms ease-in-out;
   outline: 1px solid var(--clr-ramme);
}
.bildeKarusell img:not(.aktivtKarusellBilde):hover,
.bildeKarusell img:not(.aktivtKarusellBilde):focus-visible {
   transition: all 100ms ease-in-out;
   filter: grayscale(0);
   outline: 3px solid var(--clr-ramme);
}
.aktivtKarusellBilde {
   filter: none;
   outline: 3px solid var(--clr-ramme);
}

JavaScript:
const bilder = document.querySelectorAll(".miniatyrbilde");
const bildefremvisning = document.querySelector(".bildefremvisning");
const aktivtBilde = document.querySelector(".aktivtBilde");
const lukkKnapp = document.querySelector(".maskeKryss");
const bildeTittelAktiv = document.querySelector(".bildetittelAktiv");
const bildeTekstAktiv = document.querySelector(".bildetekstAktiv");
const miniatyrgalleri = document.querySelectorAll("#galleri-grid div");
const bildeKarusell = document.querySelector(".bildeKarusell");
const karusellBildeElement = document.querySelectorAll(".bildeKarusell img");
const aktivtBildeTeller = document.querySelector(".bildeTeller .gjeldendeBilde");
const totaltBilderTeller = document.querySelector(".bildeTeller .bilderTotalt");
const antallBilder = miniatyrgalleri.length;

let totaltAntallBilder = bilder.length;
let førsteBildeIgruppe = 0;
let aktivtBildeIndex = 0;

let galleriBilder = document.querySelectorAll("#galleri-bilde");

if (antallBilder <= 4) {
   document.querySelectorAll(".sideTeller, #pilForrigeGruppe, #pilNesteGruppe").forEach((elem) => {
      elem.style.display = "none";
   });
}

Array.from(miniatyrgalleri).forEach((galleri, i) => {
   if (i < 4) {
      galleri.style.display = "block";
   } else {
      galleri.style.display = "none";
   }
});

function oppdaterBildeTekst(bilde, tittelElement, tekstElement) {
   const tittelTekst = bilde.getAttribute("tittel");
   const bildeTekst = bilde.getAttribute("alt");
   tittelElement.textContent = tittelTekst ? tittelTekst : "";
   tekstElement.textContent = bildeTekst ? bildeTekst : "";
}

bilder.forEach((bilde, index) => {
   const tittelTekst = bilde.parentElement.querySelector(".bildetittel");
   const bildeTekst = bilde.parentElement.querySelector(".bildetekst");
   oppdaterBildeTekst(bilde, tittelTekst, bildeTekst);
   bilde.addEventListener("click", () => {
      aktivtBildeIndex = index;
      visBilde();
   });
});

const settBredde = () => {
   const bilde = aktivtBilde.querySelector("img");
   if (bilde) {
      if (!bilde.style.maxWidth && !bilde.style.maxHeight) {
         bilde.style.maxWidth = "90vw";
         bilde.style.maxHeight = "90vh";
      }
   }
};

const pilNesteGruppe = document.querySelector("#pilNesteGruppe");
const pilForrigeGruppe = document.querySelector("#pilForrigeGruppe");

const bilderPerSide = 4;
const antallSider = Math.ceil(antallBilder / bilderPerSide);
let gjeldendeSide = 1;

const gjeldendeSiden = document.querySelector(".gjeldendeSiden");
const siderTotalt = document.querySelector(".siderTotalt");

gjeldendeSiden.textContent = gjeldendeSide;
siderTotalt.textContent = antallSider;

const oppdaterBildegruppe = () => {
   for (let i = 0; i < antallBilder; i++) {
      if (i >= førsteBildeIgruppe && i < førsteBildeIgruppe + bilderPerSide) {
         miniatyrgalleri[i].style.display = "block";
      } else {
         miniatyrgalleri[i].style.display = "none";
      }
   }
   gjeldendeSiden.textContent = gjeldendeSide;
};

pilNesteGruppe.addEventListener("click", () => {
   if (førsteBildeIgruppe + bilderPerSide < antallBilder) {
      førsteBildeIgruppe += bilderPerSide;
      gjeldendeSide++;
   } else {
      førsteBildeIgruppe = 0;
      gjeldendeSide = 1;
   }
   oppdaterBildegruppe();
});

pilForrigeGruppe.addEventListener("click", () => {
   if (førsteBildeIgruppe - bilderPerSide >= 0) {
      førsteBildeIgruppe -= bilderPerSide;
      gjeldendeSide--;
   } else {
      førsteBildeIgruppe = antallBilder - (antallBilder % bilderPerSide || bilderPerSide);
      gjeldendeSide = antallSider;
   }
   oppdaterBildegruppe();
});

bilder.forEach((bilde) => {
   bilde.addEventListener("click", () => {
      aktivtBilde.innerHTML = `<img src="${bilde.src}"  alt="${bilde.alt}">`;
      bildefremvisning.style.display = "flex";
      bildeTittelAktiv.textContent = bilde.getAttribute("tittel");
      bildeTekstAktiv.textContent = bilde.getAttribute("alt");
      lukkKnapp.addEventListener("click", () => {
         bildefremvisning.style.display = "none";
         karusellBildeElement.forEach((element) => {
            element.classList.remove("aktivtKarusellBilde");
         });
         aktivtBildeIndex = null;
      });
      settBredde();
      aktivtKarusellBilde();
   });
});

bildefremvisning.addEventListener("click", (event) => {
   if (event.target === bildefremvisning) {
      bildefremvisning.style.display = "none";
      karusellBildeElement.forEach((element) => {
         element.classList.remove("aktivtKarusellBilde");
      });
      aktivtBildeIndex = null;
   }
});

function aktivtKarusellBilde() {
   const karusellBildeElementer = document.querySelectorAll(".bildeKarusell img");
   karusellBildeElementer.forEach((bildeElement, index) => {
      if (index === aktivtBildeIndex) {
         bildeElement.classList.add("aktivtKarusellBilde");
      } else {
         bildeElement.classList.remove("aktivtKarusellBilde");
      }
   });
}
karusellBildeElement.forEach((bilde, index) => {
   bilde.addEventListener("click", () => {
      aktivtBildeIndex = index;
      visBilde();
      aktivtKarusellBilde();
   });
});

bilder.forEach((bilde, index) => {
   const nyttBilde = document.createElement("img");
   nyttBilde.src = bilde.src;
   nyttBilde.alt = bilde.alt;
   nyttBilde.addEventListener("click", () => {
      aktivtBildeIndex = index;
      visBilde();
   });
   bildeKarusell.appendChild(nyttBilde);
});

function visBilde() {
   // Oppdater bilde- og tekstdata
   aktivtBilde.innerHTML = `<img src="${bilder[aktivtBildeIndex].src}" alt="${bilder[aktivtBildeIndex].alt}" />`;
   bildeTittelAktiv.innerHTML = miniatyrgalleri[aktivtBildeIndex].querySelector(".bildetittel").innerHTML;
   bildeTekstAktiv.innerHTML = miniatyrgalleri[aktivtBildeIndex].querySelector(".bildetekst").innerHTML;

   // Oppdater bildetelleren
   aktivtBildeTeller.textContent = aktivtBildeIndex + 1;
   totaltBilderTeller.textContent = totaltAntallBilder;

   const bilderTotalt = document.querySelector(".bildeTeller .bilderTotalt");
   bilderTotalt.textContent = bilder.length;

   // Oppdater galleri-grid
   galleriBilder.forEach((bilde, index) => {
      const tittelTekst = bilde.querySelector(".bildetittel");
      const bildeTekst = bilde.querySelector(".bildetekst");
      oppdaterBildeTekst(bilder[index], tittelTekst, bildeTekst);
      if (index === aktivtBildeIndex) {
         bilde.classList.add("aktivtBilde");
      } else {
         bilde.classList.remove("aktivtBilde");
      }
   });

   bildeKarusell.children[aktivtBildeIndex].click();

   // Oppdater plassering i rekken av det totale antallet bilder
   const antallBilder = bilder.length;
   const bildePlassering = document.querySelector("#bilde-plassering");
   if (bildePlassering) {
      bildePlassering.innerText = `Bilde ${aktivtBildeIndex + 1} av ${antallBilder}`;
   }

   // Juster bildestørrelse
   settBredde();
   aktivtKarusellBilde();
}

const oppdragsSideBilde = document.querySelector(".oppdragsSideBilde");
oppdragsSideBilde.addEventListener("click", () => {
   bildefremvisning.style.display = "flex";
   aktivtBildeIndex = 0;
   visBilde();
});

document.querySelector("#pilForrigeBilde").addEventListener("click", () => {
   aktivtBildeIndex = (aktivtBildeIndex - 1 + totaltAntallBilder) % totaltAntallBilder;
   visBilde();
   aktivtKarusellBilde();
   aktivtBildeTeller.textContent = aktivtBildeIndex + 1; // Oppdaterer bildetelleren
});

document.querySelector("#pilNesteBilde").addEventListener("click", () => {
   aktivtBildeIndex = (aktivtBildeIndex + 1) % totaltAntallBilder;
   visBilde();
   aktivtKarusellBilde();
   aktivtBildeTeller.textContent = aktivtBildeIndex + 1; // Oppdaterer bildetelleren
});

window.addEventListener("load", settBredde);
window.addEventListener("resize", settBredde);





Hei, jeg lager en responsiv nettside, og akkurat nå jobber jeg med interaktiviteten til et navigasjonssystem som skal fungere som nettsidens hovedmeny.
Jeg har til nå satt menyen opp slik jeg ønsker at den skal se ut, ved å bla. plassere den absolutt til høyre på skjermen med en bredde på 300px, og grået ut resten av skjerm 
Det jeg prøver å finne ut av nå er hvordan jeg kan gjøre menyen interaktiv. Jeg ønsker at vi normalt kun ser knappen med klassen "maskeMenyOutline",
men når vi trykker knappen, så kommer ".overlayMeny" til syne, mens ".tpHovedmenytil" kommer inn fra siden. Jeg regner med å måtte bruke JavaScript for
å oppnå dette, men kan du du være så snill å hjelpe meg med å skrive logikken?

HTML:
<nav>
   <button class="menyKnapp navIkon maskeMenyOutline"></button>
   <button class="navIkon maskeMenyFill menyAktive"></button>
      <div class="overlayMeny">
         <div class="tpHovedmeny">
            <h1><b>Timeplan 2023</b></h1>
            <a class="hovedmenyKnapp" target="_self" rel="noreferrer noopener" href="../index.html" title="Startside" alt="Naviger til startsiden">
               <div class="hovedmenyIkonRamme rundRamme ixD nB">
                  <div class="hovedmenyIkon maskeIndexOutline displayOutline"></div>
                  <div class="hovedmenyIkon maskeIndexFill displayFill"></div>
               </div>
               <h3 class="rundRamme ixD xSB hovedmenyTittel infoDesk">Startside</h3>
            </a>
            <a class="hovedmenyKnapp" target="_self" rel="noreferrer noopener" href="https://f21.vgs.no" title="F21 Skole hjemmeside" alt="F21 Skole hjemmeside">
               <div class="hovedmenyIkonRamme rundRamme ixD nB">
                  <div class="hovedmenyIkon maskeF21Outline displayOutline"></div>
                  <div class="hovedmenyIkon maskeF21Fill displayFill"></div>
               </div>
               <h3 class="rundRamme ixD xSB hovedmenyTittel infoDesk">F21 Hjemmeside</h3>
            </a>
            <button id="dark-mode-toggle" class="dag-natt" aria-label="dark mode toggle">
               <svg class="svg-anim" viewBox="0 70 100 100">
                  [svg-kode]
               </svg>
            </button>
         </div>
      </div>
</nav>

CSS
.overlayMeny {
   position: fixed;
   display: flex;
   flex-direction: column;
   height: 100%;
   width: 100%;
   z-index: 900;
   background-color: rgba(0, 0, 0, 0.8);
   place-content: center;
   text-align: center;
}
.menyAktive {
   position: absolute;
   top: 0.4rem;
   right: 0.5rem;
   z-index: 1000;
}
.tpHovedmeny {
   position: absolute;
   margin-inline: auto;
   right: 0;
   background-color: var(--clr-tekstBoks);
   width: 300px;
   height: 100%;
   padding-inline: 1rem;
   padding-block-start: 3rem;
   /* display: none; */
}
.tpHovedmeny h1 {
   font-size: 2rem;
}
.hovedmenyIkonRamme {
   width: 60px;
   height: 60px;
   z-index: 100;
   padding: 0.4rem;
}
.hovedmenyIkon {
   background-color: var(--clr-tekst);
   width: 100%;
   height: 100%;
}
.hovedmenyTittel {
   position: relative;
   padding-block: 0.5rem;
   padding-inline-start: 3rem;
   padding-inline-end: 2rem;
   margin-inline-start: -2.5rem;
   z-index: 90;
}
.hovedmenyKnapp {
   display: grid;
   grid-template-columns: auto 1fr;
   align-items: center;
   margin-block: 1rem;
   transition: all 0.3s ease-in-out;
   transform: scale(1);
}
.hovedmenyKnapp:hover,
.hovedmenyKnapp:focus-visible {
   transition: all 0.3s ease-in-out;
   transform: scale(1.01);
}
.displayOutline {
   display: block;
}
.displayFill {
   display: none;
}
.hovedmenyKnapp:hover .displayOutline,
.hovedmenyKnapp:focus-visible .displayOutline {
   display: none;
}
.hovedmenyKnapp:hover .displayFill,
.hovedmenyKnapp:focus-visible .displayFill {
   display: block;
}
.maskeIndexFill {
   -webkit-mask: url(/images/svg/im/im_home_fill.svg) no-repeat center;
   mask: url(/images/svg/im/im_home_fill.svg) no-repeat center;
}
.maskeIndexOutline {
   -webkit-mask: url(/images/svg/im/im_home_outline.svg) no-repeat center;
   mask: url(/images/svg/im/im_home_outline.svg) no-repeat center;
}